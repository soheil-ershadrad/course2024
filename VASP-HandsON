VASP Hands Ons:

You need to have a ssh connection to our computer to be able to run calculations there:
If you have MAC or Linux, open a terminal and use the following command, and password given to you in the class:

"ssh -X course2024@biplab-Precision-7960-Tower.physics.uu.se"

If you have Windows, you need to install a ssh client software like putty:

"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html"

After installation use the following information to get connected:
port : 22
user : course2024
host : biplab-Precision-7960-Tower.physics.uu.se

-------------------------------------------------------------------------------------------------

We will work in linux environment, so we need to know a few useful commands in linux:

"ls"   # to see the content of a folder
"pwd"  # to see the address to the current directory 
"mkdir folder_name"   # to create a folder inside the current directory
"cd <folder_name>"   # to go to a folder inside the current directory
"cd <directory_address>"   # to go to a special directory
"cd ../"   # to go one folder back
"cd ../../"   # to go two folders back
"cp ../my_file ."   # to copy a file, name my_file to the current folder from one folder out.

-------------------------------------------------------------------------------------------------

We always need at least 4 initial input files to start a VASP job.

POSCAR : contains structural information
INCAR : contains the tags that tells details of our jobs to the software
KPOINRS : contains information about grids in reciprocal lattice
POTCAR : contains predefined potentials

Other inputs may be required for specific calculations. 

POSCAR format:
line1 : comment
line2 : scale for lattice parameters
line3-5 : lattice vectors 
line6 : elements
line7 : number of elements
line8 : cartesian or direct, tell about how we define atomic coordination with respect to lattice vector
line9-n : atomic coordinations

POSCAR example:
AFM  NiO
 4.17
 1.0 0.5 0.5
 0.5 1.0 0.5
 0.5 0.5 1.0
 Ni  O
 2   2
Cartesian
 0.0 0.0 0.0
 1.0 1.0 1.0
 0.5 0.5 0.5
 1.5 1.5 1.5

KPOINTS example:
k-points
 0
gamma
 4  4  4 
 0  0  0

* we usually only modify  4th line that specifies number of cuts along each direction in reciprocal space

POTCAR files are provided by VASP developers and are licensed, so we need to download them.

To understand INCAR tags the best reference is VASP wiki.

-------------------------------------------------------------------------------------------------

A- self consistence field calculations (SCF)
Here we only solve the schrodinger equation (Kohn-Sham equation) for electrons. 
We will have some iterations (electronic steps) to find the electronic configuration that minimizes the total energy.

Steps to follow:
1- create a folder by "mkdir <folder_name>    # you choose the folder name
2- copy POSCAR, KPOINTS, POTCAR, INCAR files in this folder by 
"cp /home/course2024/lab/examples/GaAs/sc/POSCAR . "
"cp /home/course2024/lab/examples/GaAs/sc/KPOINTS . "
"cp /home/course2024/lab/examples/GaAs/sc/INCAR . "
"cp /home/course2024/lab/examples/GaAs/sc/POTCAR . "

3- You can modify files if needed by "nano <file_name>" like "nano POSCAR", an alternative is "vi POSCAR" but working with nano is easier for beginners.

4- Submit calculation job to the computer by "vasp_std" 
* Alternatively, if you want to store the outputs in a separate file instead of seeing them on the screen, use "vasp_std > vasp.out".  

5- When you see "reached required accuracy - stopping structural energy minimisation" on you screen, the calculation is done.

6- Check the outputs, especially "OUTCAR" file that contains the most important information about calculation results.

-------------------------------------------------------------------------------------------------

B- Convergence with respect to KPOINTS, and cutoff energy:
1- Create a new folder by "mkdir kpoints_conv"
2- Use the input files from the previous calculation.
3- Vary the kpoints grid uniformly from 5 to 35 in steps of 5, i.e. 5 5 5, 10 10 10, 15 15 15, ..., 35 35 35. Do each calculation in a separate folder, "mkdir 5"  for example for the first calculation.
4- Plot the kpoints_number vs. total energy. At which Kpoints the total energy is converged?

6- Create a new folder by "mkdir encut_conv"
7- Use the input files from the scf calculation and the converged KPOINTS from the previous step.
8- Vary the ENCUT input in the INCAR file, from 50 to 750 in steps of 100 eV, i.e. ENCUT = 50. Do each calculation in a separate folder, "mkdir 50"  for example for the first calculation.
9- Plot the ENCUT_value vs. total energy. At which ENCUT value the total energy is converged?

* The Kpoints and ENCUT convergence should be done for each material separately, but as a rule of thumb, ENCUT = 500 eV is good for most of systems. 
KPOINTS convergence should be done in most cases depending on our calculations' sensitivity. 

-------------------------------------------------------------------------------------------------

C- 3D vs 2D vs 1D vs 0D
1- Find the eigen values of H atom, for this you need to do a scf calculation on a Hydrogen atom in a box (0D system).
Q1- Should we do KPOINTS convergence?

2- Do scf calculation for graphene monolayer (2D system).
Q2- How do we create a graphene monolayer out of bulk graphite?
Q2- Should we do KPOINTS convergence?

3- 1D systems
Q1- What is an example of 1D system?
Q2- How does the reciprocal space look like for a 1D system?

-------------------------------------------------------------------------------------------------

D- Structural optimizations
D1- Internal optimization (atomic relaxation)
1- Relax the atomic structure of the CO molecule "cp /home/course2024/lab/examples/CO/POSCAR .", for this, you need to modify the INCAR file only.
2- ADD these tags to the INCAR file: 
IBRION = 2
NSW = 100
EDIFFG = -0.01
3- What is the meaning with these tags?
4- What is the equilibrium C-O bond length?


D2- Cell optimization
1- Optimize the lattice parameter of Gold (materials project ID: mp-81). 
2- For this you need to vary the lattice parameter in the POSCAR file, between 4.0 and 4.3 in steps of 0.1, and find the minimum of energy vs. lattice parameter.


D3- Cell optimization + atomic relaxation
1- Optimize the Au cell automatically, by modifying the INCAR file:
ISIF = 3
IBRION = 2
NSW = 100
EDIFFG = -0.01
2- Compare the lattice parameter that you found with the lattice parameter from the previous step.


D4- Optimize the lattice parameter of graphene. Make sure that the vacuum is large enough at the end of the calculation.

-------------------------------------------------------------------------------------------------
E- Density of States 
1- Calculate DOS for GaAs.
* To combine POTCARs of Ga and As you can use a command like this:
"cat /home/course2024/POTCARS/PBE/Ga/POTCAR /home/course2024/POTCARS/PBE/As/POTCAR > POTCAR"
* Use 11 11 11 KPOINTS
* Use the following INCAR:

SYSTEM = GaAs    # arbitrary name
ISTART = 0       # Put 0 if you start from scratch and 1 if you restart a job having the WAVECAR
ISMEAR = 0       # Use Gaussian smearing if you don't know which smearing is better for your material.  0 : Gaussian smearing, -1 : Fermi smearing, There are more read here: https://www.vasp.at/wiki/index.php/ISMEAR
SIGMA  = 0.05    # Width of Smearing in eV
LORBIT = 11      # Projection into orbitals
NSW    = 0       # Number of Ionic steps
IBRION = -1      # Determines how the ions are updated and moved, use -1 if you don't want movement. (https://www.vasp.at/wiki/index.php/IBRION)
ENCUT = 500      # Specifies the energy cutoff for the plane-wave basis set in eV.
NELM   = 500     # Maximum number of Electronic steps
NELMIN = 4       # Minimim number of converged electronic steps
PREC = Accurate  # Accuracy of calculation
EDIFF  = 1E-07   # total energy convergence thresold
ALGO   = Fast    # The electronic minimization algorithm 

* After the calculation is done, use vaspkit (code 111) to extract the DOS data and the "python3 dos.py" to plot the data.
* You can use "open dos.png", if it didnt work you can dowload the plot to your computer by "scp course2024@biplab-Precision-7960-Tower.physics.uu.se:{address to file by 'pwd'}/dos.png ."

1.5- Change SIGMA to 0.2 and redo the calculation.

2- Calculate pDOS for GaAs.
* No update in previous calculation is needed. Only use vaspkit (code 113) and "python3 pdos.py".

3- Calculate DOS for Graphene.
*Use 11 11 1 Kpoints.

4- Calculate DOS and pDOS for Au.

-------------------------------------------------------------------------------------------------

F- Electronic band structure
What is reciprocal space?
1- Upload a POSCAR to this website and visualize the reciprocal space and BZ
https://www.materialscloud.org/work/tools/seekpath

2- Calculate band structure for GaAs
Use the following KPOINTS and update the paths:
k-points along high symmetry lines
 50  
Line-mode
r
  0.000000000000000   0.000000000000000   0.000000000000000   !G
  0.500000000000000   0.000000000000000   0.000000000000000   !M

  0.500000000000000   0.000000000000000   0.000000000000000   !M
  0.666666666666666   0.333333333333333   0.000000000000000   !K

  0.666666666666666   0.333333333333333   0.000000000000000   !K
  0.000000000000000   0.000000000000000   0.000000000000000   !G

*Use the following INCAR:

SYSTEM = TEST
ISTART = 0
ICHARG = 11
ISMEAR = 0
SIGMA  = 0.05
LORBIT = 11
NSW    = 0
IBRION = -1
ENCUT = 500
NELM   = 200
NELMIN = 4
PREC = Accurate
EDIFF  = 1E-07
ALGO   = Fast

* Use vaspkit to extract data:


3- Calculate fatband for gaAs

4- Calculate band structure for graphene.
*Use the following KPOINTS:

k-points along high symmetry lines
 50  
Line-mode
r
  0.000000000000000   0.000000000000000   0.000000000000000   !G
  0.500000000000000   0.000000000000000   0.000000000000000   !M

  0.500000000000000   0.000000000000000   0.000000000000000   !M
  0.666666666666666   0.333333333333333   0.000000000000000   !K

  0.666666666666666   0.333333333333333   0.000000000000000   !K
  0.000000000000000   0.000000000000000   0.000000000000000   !G




5(bonus)- Calculate the effective mass for electrons and holes in GaAs. 

-------------------------------------------------------------------------------------------------
G- Formation Energy and cohesive energy (will be updated)

-------------------------------------------------------------------------------------------------
- Magnetic materials (will be updated)

-------------------------------------------------------------------------------------------------
- Charge density, magnetization density, ELF (will be updated)

-------------------------------------------------------------------------------------------------
These tasks are good for people who have a lot of experience working with VASP, and for some Python, and find previous tasks trivial:

Advanced task1: Create zigzag and armchair graphene nanoribbons and graphene nanotube using the ASE python package. Try to optimize the structure, calculate and plot the band structure.
Advanced task2: Optimizing 2D systems via ISIF = 3 tag is not possible, do you know why? How can we overcome this problem? Generate a vasp_xy executable and compile it.
Advanced task3: Write a script that uses API key to grab structures with specific features, like special symmetries or band-gap size, automatically from MatreialsProject. Try to optimize those structures automatically using to script.
Advanced task4: Try to calculate the spin-spiral state for FCC Fe. 


